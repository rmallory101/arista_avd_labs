vxlan_interface:
{# vxlan-vtep interface #}
  Vxlan1:
    description: {{ inventory_hostname }}_VTEP
    vxlan:
{% if switch.multi_vtep is arista.avd.defined(true) %}
      source_interface: Loopback0
      mlag_source_interface: {{ switch.vtep_loopback }}
{% else %}
      source_interface: {{ switch.vtep_loopback }}
{% endif %}
{% if switch.mlag is arista.avd.defined(true) %}
      virtual_router_encapsulation_mac_address: "mlag-system-id"
{% endif %}
      udp_port: 4789
      vlans:
{% for tenant in network_services_data.tenants %}
{%     if tenant.evpn_l2_multicast is arista.avd.defined %}
{%         if tenant.evpn_l2_multicast.underlay_l2_multicast_group_ipv4_pool is arista.avd.defined(fail_action='error', var_name="'evpn_l2_multicast.underlay_l2_multicast_group_ipv4_pool' for Tenant: " ~ tenant.name) %}
{%             set underlay_l2_multicast_group_ipv4_pool = tenant.evpn_l2_multicast.underlay_l2_multicast_group_ipv4_pool | ansible.netcommon.ipaddr('network') %}
{%             set underlay_l2_multicast_group_ipv4_pool_offset = tenant.evpn_l2_multicast.underlay_l2_multicast_group_ipv4_pool_offset | arista.avd.default(0) %}
{%         endif %}
{%     endif %}
{%     for vrf in tenant.vrfs %}
{%         for svi in vrf.svis %}
{%             if svi.vxlan is arista.avd.defined(false) %}
{%                 continue %}
{%             endif %}
{%             set svi_int = svi.id | int %}
        {{ svi_int }}:
          vni: {{ svi.vni_override | arista.avd.default(
                  tenant.mac_vrf_vni_base + svi_int) }}
{%             set svi_evpn_l2_multicast_enabled = svi.evpn_l2_multicast.enabled | arista.avd.default(
                                                   tenant.evpn_l2_multicast.enabled) %}
{%             if svi_evpn_l2_multicast_enabled is arista.avd.defined(true) %}
          multicast_group: {{ underlay_l2_multicast_group_ipv4_pool | ansible.netcommon.ipmath(svi_int - 1 + underlay_l2_multicast_group_ipv4_pool_offset) }}
{%             endif %}
{%         endfor %}
{%     endfor %}
{%     for l2vlan in tenant.l2vlans %}
{%         if l2vlan.vxlan is arista.avd.defined(false) %}
{%             continue %}
{%         endif %}
{%         set l2vlan_int = l2vlan.id | int %}
        {{ l2vlan_int }}:
          vni: {{ l2vlan.vni_override | arista.avd.default(
                  tenant.mac_vrf_vni_base + l2vlan_int) }}
{%         set l2vlan_evpn_l2_multicast_enabled = l2vlan.evpn_l2_multicast.enabled | arista.avd.default(
                                                  tenant.evpn_l2_multicast.enabled) %}
{%         if l2vlan_evpn_l2_multicast_enabled is arista.avd.defined(true) %}
          multicast_group: {{ underlay_l2_multicast_group_ipv4_pool | ansible.netcommon.ipmath(l2vlan_int - 1 + underlay_l2_multicast_group_ipv4_pool_offset) }}
{%         endif %}
{%     endfor %}
{% endfor %}
{% if switch.network_services_l3 is arista.avd.defined(true) %}
      vrfs:
{%     for tenant in network_services_data.tenants %}
{%         for vrf in tenant.vrfs %}
        {{ vrf.name }}:
          vni: {{ vrf.vrf_vni | arista.avd.default(vrf.vrf_id) }}
{%         endfor %}
{%     endfor %}
{% endif %}
